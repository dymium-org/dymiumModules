% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event-utils.R
\name{use_module}
\alias{use_module}
\title{Create a new module, using the recommended folder structure.}
\usage{
use_module(name)
}
\arguments{
\item{name}{(\code{character(1)})\cr
A module name.}

\item{repo}{\verb{(character(1)}\cr
A GitHub repository to look for modules.
By default, this uses 'dymium-org/dymiumModules' which is the main repository
that hosts the package and a public repository for shared modules.}

\item{version}{\verb{(character(1)}\cr
Version number of a module. This should follow the following convention,
if you want to download the version 1.1.0 of a module then you should type in
"1.1.0". If this field is left blank, the latest version of the module will be
used.}
}
\description{
This function creates a new module inside the 'modules' folder of your active R project.
If the 'modules' folder doesn't exist it will create it then adds a new folder
with the name as specified in the \code{name} argument inside the 'modules' folder.
R scripts to be used across the module will be added which contain the following:
\itemize{
\item a lgr logger script,
\item a script that contains constant values, and
\item a script for storing helper functions.
}

Since dymium modules use the 'modules' and 'checkmate' packages, if these
packages are not installed the function will ask whether you would like to
install them or not.

Note that, to add event functions to a module see \link{use_event}.
}
\examples{

\dontrun{
  # Note: running this will create a folder called "modules" and a sub-folder
  #       to your working directory within the folder called "demography"
  use_module(name = "demography")
}
}
